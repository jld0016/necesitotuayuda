@model NYHApp.ViewModels.HelpVM

@{
    ViewData["Title"] = "Edit";
}

@using (Html.BeginForm("Edit", "Helps", FormMethod.Post, new { @class = "form-group", id = "HelpMainForm", enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.Help.IdHelp)
    @Html.HiddenFor(model => model.Help.Date)
    @Html.HiddenFor(model => model.Help.CodeHelp)
    @Html.HiddenFor(model => model.Help.IdUser)
    <div class="form-row">
        <div class="form-group col-xs-12 col-md-12 col-lg-12">
            @Html.LabelFor(model => model.Help.Title, new { @class = "control-label required" })
            @Html.EditorFor(model => model.Help.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Help.Title, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-xs-12 col-md-12 col-lg-12">
            @Html.LabelFor(model => model.Help.Description, new { @class = "control-label required" })
            @Html.TextAreaFor(model => model.Help.Description, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Help.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row">
        <label class="col-xs-12 col-md-3 col-lg-3">
            <input asp-for="@Model.Help.IsPainting" class="changeDedication" id="isPainting" /> @Html.DisplayNameFor(model => model.Help.IsPainting)
        </label>
        <label class="col-xs-12 col-md-3 col-lg-3">
            <input asp-for="@Model.Help.IsMansonry" class="changeDedication" id="isMansonry" /> @Html.DisplayNameFor(model => model.Help.IsMansonry)
        </label>
        <label class="col-xs-12 col-md-3 col-lg-3">
            <input asp-for="@Model.Help.IsPlumbing" class="changeDedication" id="isPlumbing" /> @Html.DisplayNameFor(model => model.Help.IsPlumbing)
        </label>
        <label class="col-xs-12 col-md-3 col-lg-3">
            <input asp-for="@Model.Help.IsElectricity" class="changeDedication" id="isElectricity" /> @Html.DisplayNameFor(model => model.Help.IsElectricity)
        </label>

        <div class="d-none col-xs-12 col-md-6 col-lg-6" id="tablePainting">
            <div class="table-responsive">
                <table class="table table-light">
                    <thead>
                        <tr>
                            <th>
                                @Html.LabelFor(z => z.Help.IsPainting)
                            </th>
                            <th>
                                @Html.Label(NYHApp.Resources.Enterprise.Resource.Dedication)
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @Html.EditorFor(model => model.HelpsTypesJobPainting)
                    </tbody>
                </table>
            </div>
        </div>
        <div class="d-none col-xs-12 col-md-6 col-lg-6" id="tableMansonry">
            <div class="table-responsive">
                <table class="table table-light">
                    <thead>
                        <tr>
                            <th>
                                @Html.LabelFor(z => z.Help.IsMansonry)
                            </th>
                            <th>
                                @Html.Label(NYHApp.Resources.Enterprise.Resource.Dedication)
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @Html.EditorFor(model => model.HelpsTypesJobMansonry)
                    </tbody>
                </table>
            </div>
        </div>
        <div class="d-none col-xs-12 col-md-6 col-lg-6" id="tablePlumbing">
            <div class="table-responsive">
                <table class="table table-light">
                    <thead>
                        <tr>
                            <th>
                                @Html.LabelFor(z => z.Help.IsPlumbing)
                            </th>
                            <th>
                                @Html.Label(NYHApp.Resources.Enterprise.Resource.Dedication)
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @Html.EditorFor(model => model.HelpsTypesJobPlumbing)
                    </tbody>
                </table>
            </div>
        </div>
        <div class="d-none col-xs-12 col-md-6 col-lg-6" id="tableElectricity">
            <div class="table-responsive">
                <table class="table table-light">
                    <thead>
                        <tr>
                            <th>
                                @Html.LabelFor(z => z.Help.IsElectricity)
                            </th>
                            <th>
                                @Html.Label(NYHApp.Resources.Enterprise.Resource.Dedication)
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @Html.EditorFor(model => model.HelpsTypesJobElectricity)
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="form-row">
        @*<div class="col-xs-12 col-md-12 col-lg-12">
            <span class="btn btn-warning btn-file">
                <i class="fa fa-plus"></i> @NYHApp.Resources.Photo.Resource.Photo
                <input type="file" id="Photos" name="Photos" accept="image/jpg,image/png,image/jpeg,image/gif,application/pdf" multiple />
            </span>
        </div>*@
        <div class="col-xs-12 col-md-12 col-lg-12" id="listImages">
            @if (Model.Help.Photos != null)
            {
                @foreach (var item in Model.Help.Photos)
                {
                    <img src="@item.Path" class="thumb" alt="@item.FileName">
                }
            }
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-xs-12 col-md-2 col-lg-2">
            @Html.LabelFor(model => model.Help.IdTypeRoad, new { @class = "control-label required" })
            @Html.DropDownListFor(model => model.Help.IdTypeRoad, ViewBag.TypeRoad as SelectList, NYHApp.Resources.Shared.Resource.Select, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Help.IdTypeRoad, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-xs-12 col-md-4 col-lg-4">
            @Html.LabelFor(model => model.Help.Address, new { @class = "control-label required" })
            @Html.EditorFor(model => model.Help.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Help.Address, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-xs-12 col-md-1 col-lg-1">
            @Html.LabelFor(model => model.Help.Number, new { @class = "control-label" })
            @Html.EditorFor(model => model.Help.Number, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Help.Number, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-xs-12 col-md-1 col-lg-1">
            @Html.LabelFor(model => model.Help.Door, new { @class = "control-label" })
            @Html.EditorFor(model => model.Help.Door, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Help.Door, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-xs-12 col-md-1 col-lg-1">
            @Html.LabelFor(model => model.Help.Floor, new { @class = "control-label" })
            @Html.EditorFor(model => model.Help.Floor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Help.Floor, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-xs-12 col-md-4 col-lg-4">
            @Html.LabelFor(model => model.Help.UnstructuredAddress, new { @class = "control-label" })
            @Html.EditorFor(model => model.Help.UnstructuredAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Help.UnstructuredAddress, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-xs-12 col-md-2 col-lg-2">
            @Html.LabelFor(model => model.Help.PostalCode, new { @class = "control-label required" })
            @Html.EditorFor(model => model.Help.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Help.PostalCode, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-xs-12 col-md-4 col-lg-4">
            @Html.LabelFor(model => model.Help.City, new { @class = "control-label required" })
            @Html.EditorFor(model => model.Help.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Help.City, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-xs-12 col-md-4 col-lg-4">
            @Html.LabelFor(model => model.Help.State, new { @class = "control-label" })
            @Html.EditorFor(model => model.Help.State, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Help.State, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-xs-12 col-md-4 col-lg-4">
            @Html.LabelFor(model => model.Help.IdCountry, new { @class = "control-label required" })
            @Html.DropDownListFor(model => model.Help.IdCountry, ViewBag.Countries as SelectList, NYHApp.Resources.Shared.Resource.Select, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Help.IdCountry, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-xs-12 col-md-2 col-lg-2">
            @Html.LabelFor(model => model.Help.Phone1, new { @class = "control-label required" })
            @Html.EditorFor(model => model.Help.Phone1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Help.Phone1, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-xs-12 col-md-2 col-lg-2">
            @Html.LabelFor(model => model.Help.Phone2, new { @class = "control-label" })
            @Html.EditorFor(model => model.Help.Phone2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Help.Phone2, "", new { @class = "text-danger" })
        </div>
    </div>
    @if (Model.Help.Proposals != null && Model.Help.Proposals.Count() > 0)
    {
        <div class="card mt-5">
            <div class="card-header bg-dark text-light">
                <label class="card-title col-xs-12 col-md-12 col-lg-12">@NYHApp.Resources.Proposal.Resource.Proposal</label>
            </div>
            <div class="card-body">
                <div class="form-row">
                    <div class="col-xs-12 col-md-10 col-lg-10 mx-auto" id="">
                        <div class="table-responsive">
                            <table class="table table-info">
                                <thead>
                                    <tr>
                                        <th>
                                            @Html.DisplayName(NYHApp.Resources.Proposal.Resource.Description)
                                        </th>
                                        <th>
                                            @Html.DisplayName(NYHApp.Resources.Proposal.Resource.Price)
                                        </th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach(var item in Model.Help.Proposals)
                                    {
                                        <tr>
                                            <td>
                                                @Html.DisplayFor(model => item.Description)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(model => item.Total)
                                            </td>
                                            <td>
                                                <a class="btn btn-success text-light" asp-action="ViewProposal" asp-controller="Helps" asp-route-id="@item.IdProposal" target="_blank"><span class="far fa-eye"></span></a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    <div class="form-row col-xs-12 col-md-12 col-lg-12 mb-2 pl-0 d-flex">
        <div class="col-xs-12 col-md-2 col-lg-2">
            <a class="btn btn-secondary col-xs-12 col-md-12 col-lg-12 border-dark text-dark" href="/"><i class="fas fa-ban"></i> @NYHApp.Resources.Shared.Resource.Cancel</a>
        </div>
        <div class="col-xs-12 col-md-2 col-lg-2">
            <button type="submit" class="btn btn-info col-xs-12 col-md-12 col-lg-12"><i class="far fa-save"></i> @NYHApp.Resources.Shared.Resource.Save</button>
        </div>
        <div class="col-xs-12 col-md-2 col-lg-2 ml-auto">
            <a class="btn btn-danger btnDelete text-light col-xs-12 col-md-12 col-lg-12" data-id="@Model.Help.IdHelp" data-href="/Helps/Delete"><i class="fas fa-minus"></i> @NYHApp.Resources.Shared.Resource.Remove</a>
        </div>
    </div>
}

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        $(document).ready(function () {
            if ($('#isPainting').is(':checked')) {
                activeTable($("#tablePainting"));
            }
            if ($('#isMansonry').is(':checked')) {
                activeTable($("#tableMansonry"));
            }
            if ($('#isPlumbing').is(':checked')) {
                activeTable($("#tablePlumbing"));
            }
            if ($('#isElectricity').is(':checked')) {
                activeTable($("#tableElectricity"));
            }
        })
    </script>
}
